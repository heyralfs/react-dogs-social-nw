{"version":3,"sources":["components/User/UserStatsGraphs/style.module.css","components/User/UserStatsGraphs/index.js"],"names":["module","exports","UserStatisGraphs","data","useState","graph","setGraph","total","setTotal","useEffect","graphData","map","item","x","title","y","Number","acessos","reduce","a","b","className","styles","graphItem","padding","top","bottom","left","right","style","fillOpacity","stroke","strokeWidth","labels","fontSize","fill","alignment"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,UAAY,yBAAyB,MAAQ,uB,8GCoD7EC,UAjDU,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACXC,mBAAS,IADE,mBAC9BC,EAD8B,KACvBC,EADuB,OAEXF,mBAAS,GAFE,mBAE9BG,EAF8B,KAEvBC,EAFuB,KAiBrC,OAbAC,qBAAU,WACR,IAAMC,EAAYP,EAAKQ,KAAI,SAACC,GAAD,MAAW,CACpCC,EAAGD,EAAKE,MACRC,EAAGC,OAAOJ,EAAKK,aAGjBX,EAASI,GAETF,EACEL,EAAKQ,KAAI,gBAAGM,EAAH,EAAGA,QAAH,OAAiBD,OAAOC,MAAUC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,QAEjE,CAACjB,IAGF,0BAASkB,UAAS,oBAAeC,IAAOjB,OAAxC,UACE,qBAAKgB,UAAS,UAAKC,IAAOf,MAAZ,YAAqBe,IAAOC,WAA1C,SACE,0CAAahB,OAGf,qBAAKc,UAAWC,IAAOC,UAAvB,SACE,cAAC,IAAD,CACEpB,KAAME,EACNmB,QAAS,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjDC,MAAO,CACL1B,KAAM,CACJ2B,YAAa,GACbC,OAAQ,OACRC,YAAa,GAEfC,OAAQ,CACNC,SAAU,GACVC,KAAM,aAKd,qBAAKd,UAAWC,IAAOC,UAAvB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYpB,KAAME,EAAO+B,UAAU","file":"static/js/4.00d0479b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"style_graph__tmnde\",\"graphItem\":\"style_graphItem__2qJwC\",\"total\":\"style_total__27y-q\"};","import React, { useEffect, useState } from \"react\";\r\nimport styles from \"./style.module.css\";\r\nimport { VictoryPie, VictoryChart, VictoryBar } from \"victory\";\r\n\r\nconst UserStatisGraphs = ({ data }) => {\r\n  const [graph, setGraph] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const graphData = data.map((item) => ({\r\n      x: item.title,\r\n      y: Number(item.acessos),\r\n    }));\r\n\r\n    setGraph(graphData);\r\n\r\n    setTotal(\r\n      data.map(({ acessos }) => Number(acessos)).reduce((a, b) => a + b)\r\n    );\r\n  }, [data]);\r\n\r\n  return (\r\n    <section className={`animeLeft ${styles.graph}`}>\r\n      <div className={`${styles.total} ${styles.graphItem}`}>\r\n        <p>Acessos: {total}</p>\r\n      </div>\r\n\r\n      <div className={styles.graphItem}>\r\n        <VictoryPie\r\n          data={graph}\r\n          padding={{ top: 20, bottom: 20, left: 80, right: 80 }}\r\n          style={{\r\n            data: {\r\n              fillOpacity: 0.9,\r\n              stroke: \"#fff\",\r\n              strokeWidth: 2,\r\n            },\r\n            labels: {\r\n              fontSize: 14,\r\n              fill: \"#333\",\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={styles.graphItem}>\r\n        <VictoryChart>\r\n          <VictoryBar data={graph} alignment=\"start\" />\r\n        </VictoryChart>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default UserStatisGraphs;\r\n"],"sourceRoot":""}